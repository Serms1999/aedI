*************  NOMBRE  ***************
fmod VOCAL is

*************  CONJUNTOS  ************
	protecting BOOL .
	sort V .

*************  SINTAXIS  *************
	ops A E I O U : -> V .
	op esIgual : V V -> Bool .
	op esDistinta : V V -> Bool .
	op esMenor : V V -> Bool .

*************  SEMANTICA  ************
	var v w : V .

	eq esIgual(v, v) = true .
	eq esIgual(v, w) = false .
	eq esDistinta(v, w) = not esIgual(v, w) .
	eq esMenor(v, v) = false .
	eq esMenor(A, w) = true .
	eq esMenor(v, A) = false .
	eq esMenor(E, w) = true .
	eq esMenor(v, E) = false .
	eq esMenor(I, w) = true .
	eq esMenor(v, I) = false .
	eq esMenor(O, w) = true .
	eq esMenor(v, O) = false .
	eq esMenor(U, w) = false .
	eq esMenor(v, U) = true .
endfm

*************  NOMBRE  ***************
fmod PILA is

*************  CONJUNTOS  ************
	protecting BOOL .
	protecting VOCAL .
	sort MensajePilas .
	sort P .
	subsorts MensajePilas < V .

*************  SINTAXIS  *************
	op pilaVacia : -> P .
	op esVacia : P -> Bool .
	op push : V P -> P .
	op pop : P -> P .
	op tope : P -> V .

	op ERRORPILAVACIA : -> MensajePilas .

*************  SEMANTICA  ************
	var p : P .
	var v : V .

	eq esVacia(pilaVacia) = true .
	eq esVacia(push(v, p)) = false .
	eq pop(pilaVacia) = pilaVacia .
	eq pop(push(v, p)) = p .
	eq tope(pilaVacia) = ERRORPILAVACIA .
	eq tope(push(v, p)) = v .
endfm

